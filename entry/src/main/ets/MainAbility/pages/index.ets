@Entry
@Component
@Preview
struct Index {

  @State message: string = 'Hi Ishan'
  @State show: boolean = false

  /**
   * In low-code mode, do not add anything to the build function, as it will be
   * overwritten by the content generated by the .visual file in the build phase.
   */
  build() {
    Column() {
      Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Stretch, justifyContent: FlexAlign.SpaceBetween }) {
        // Text('Hello world').fontSize(50)
        Button({ type: ButtonType.Circle, stateEffect: true }) {
          Image($r("app.media.menu")).width(32).height(32)
        }.width(50).height(50).backgroundColor(Color.White)

        Button({ type: ButtonType.Circle, stateEffect: true }) {
          Image($r("app.media.user")).width(38).height(38)
        }.width(50).height(50).backgroundColor(Color.White)
      }.width('100%').height('10%')
      Text('Discover').fontSize(18).fontWeight(FontWeight.Bolder).width('90%')
      Text('our new items.').fontSize(18).fontWeight(FontWeight.Bolder).width('90%')
      Row(){
        Row(){
          Button({ type: ButtonType.Circle, stateEffect: true }) {
            Image($r("app.media.search")).width(25).height(25)
          }.width(40).height(40).backgroundColor(0xF5F5F5)
          Text('Search').fontSize(13)
        }.width('80%').height(40).backgroundColor(0xF5F5F5).borderRadius(10)
        Blank()
        Button({ type: ButtonType.Normal, stateEffect: true }) {
          Image($r("app.media.filter")).width(25).height(25)
        }.width(40).height(40).backgroundColor(0xF5F5F5).borderRadius(10)
      }.width('90%').height('10%')

      Row(){
        Row(){
          Column(){}.width('1%').height(20)
          Image($r("app.media.shoes1")).width(60).height(45).padding(1)
        }.width('24%').height('90%').borderRadius(10).backgroundColor(0xF5F5F5)
       // Column(){
        Flex({direction: FlexDirection.Row, alignItems: ItemAlign.Center}) {

          //}.width('3%').height(10)
          //Column(){
          Flex({
            direction: FlexDirection.Column,
            alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.SpaceBetween
          }) {
            Text('Running Unisex').fontSize(12).fontWeight(FontWeight.Bold).width('90%')
            Text('Shoes').fontSize(12).fontWeight(FontWeight.Bold).width('90%')
            Text('Coming soon...').fontSize(13).fontWeight(FontWeight.Bold).width('90%').fontColor(Color.Blue)
            // }
          }.width(150).padding(5)

          Flex({ justifyContent: FlexAlign.Center, direction: FlexDirection.Column }) {
            Toggle({ type: ToggleType.Switch, isOn: true }).width(40).height(20)
            Text("Notify me")
          }
        }


      }.width('75%').height('10%').border({width:2}).borderColor(0xF5F5F5).borderRadius(10).padding(5)

      Column(){
        Row(){}.width(20).height(10)
        Flex({direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween}){
          Text('Categories').fontSize(17).fontWeight(FontWeight.Bold).width('90%')
          Row(){}.width(20).height(15)


          Flex({ direction: FlexDirection.Row, alignItems: ItemAlign.Stretch, justifyContent: FlexAlign.SpaceBetween })
          {
            Button('Shoes', { type: ButtonType.Normal }).borderRadius(13).backgroundColor(Color.Blue).width(78)
            Button('Table', { type: ButtonType.Normal }).borderRadius(13).backgroundColor(0xF5F5F5).width(75).fontColor(0x000000)
            Button('Clothes', { type: ButtonType.Normal }).borderRadius(13).backgroundColor(0xF5F5F5).width(87).fontColor(0x000000)
            Button('Sofa', { type: ButtonType.Normal }).borderRadius(13).backgroundColor(0xF5F5F5).width(68).fontColor(0x000000)
          }
          Row(){}.width(20).height(15)
          Flex({justifyContent: FlexAlign.SpaceBetween}){
            Text('Popular Shoes').fontWeight(FontWeight.Bold).fontSize(18)
            Flex({justifyContent: FlexAlign.Center}){
              Text('View All ').padding({right: 5})

              Button({ type: ButtonType.Normal, stateEffect: true }) {
                Image($r("app.media.arrow")).width(15).height(15)
              }.width(15).height(15).backgroundColor(Color.Blue)
            }.width(100).padding({top: 3})
          }.padding({bottom : 10})
        }

      }.width('90%').height(120)
      Row(){}.width(20).height(15)

      Row({space:9}){
        Column(){
          Row(){}.width(20).height(15)
          Flex({justifyContent: FlexAlign.End}){
            Button({ type: ButtonType.Circle, stateEffect: true }) {
              Image($r("app.media.heart3")).width(15).height(15)
            }.width(15).height(15).backgroundColor(Color.White)
          }.width('100%').height(30).padding(5)

          Flex({direction: FlexDirection.Column, justifyContent: FlexAlign.Center}){
            Button({ type: ButtonType.Normal, stateEffect: true }) {
              Image($r("app.media.shoes3")).width(120).height(100)
            }.width('100%').height(140).backgroundColor(0x87CEEB)
          }.width('100%').height(140)

          Flex({
            direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            //  justifyContent: FlexAlign.SpaceBetween
          }) {
            Text('Running Unisex Shoes').fontSize(12).fontWeight(FontWeight.Bold).width('90%')
            Text('Edition 1').fontSize(12).fontWeight(FontWeight.Bold).width('90%')
            // Text('Coming soon...').fontSize(13).fontWeight(FontWeight.Bold).width('90%').fontColor(Color.Blue)
            // }
          }.width(150).height(30).padding(5)
          Row(){}.width(20).height(2)
          Row(){
            Text('$5,400').fontSize(12)

          }.width(150).height(30).padding(5)


        }.width('50%').height(260).backgroundColor(0x87CEEB).borderRadius(18)

        Column(){
          Row(){}.width(20).height(15)
          Flex({justifyContent: FlexAlign.End}){
            Button({ type: ButtonType.Circle, stateEffect: true }) {
              Image($r("app.media.heart")).width(15).height(15)
            }.width(15).height(15).backgroundColor(Color.White)
          }.width('100%').height(30).padding(5)

          Flex({direction: FlexDirection.Column, justifyContent: FlexAlign.Center}){
            Button({ type: ButtonType.Normal, stateEffect: true }) {
              Image($r("app.media.shoes2")).width(140).height(120)
            }.width('100%').height(140).backgroundColor(0xFFC0CB)
          }.width('100%').height(140)

          Flex({
            direction: FlexDirection.Column,
          //  alignItems: ItemAlign.Stretch,
          //  justifyContent: FlexAlign.SpaceBetween
          }) {
            Text('Running Unisex Shoes').fontSize(12).fontWeight(FontWeight.Bold).width('90%')
            Text('Edition 1').fontSize(12).fontWeight(FontWeight.Bold).width('90%')
           // Text('Coming soon...').fontSize(13).fontWeight(FontWeight.Bold).width('90%').fontColor(Color.Blue)
            // }
          }.width(150).height(30).padding(5)
          Row(){}.width(20).height(2)
          Row(){
            Text('$2,200').fontSize(12)

          }.width(150).height(30).padding(5)

        }.width('50%').height(260).backgroundColor(0xFFC0CB).borderRadius(18)

      }.width('90%').height(260)
      Row(){}.width(20).height(15)
      Divider().strokeWidth(3).opacity(0.3)
      Flex({direction: FlexDirection.Row,
        //  alignItems: ItemAlign.Stretch,
          justifyContent: FlexAlign.SpaceAround})
      {
        Flex({direction: FlexDirection.Column,
          //  alignItems: ItemAlign.Stretch,
          justifyContent: FlexAlign.Center})
        {
          Button({ type: ButtonType.Normal, stateEffect: true }) {
            Image($r("app.media.home")).width(25).height(25)
          }.width(40).height(40).borderRadius(10).backgroundColor(Color.White)
          Text('Home').fontSize(15).fontWeight(FontWeight.Bold)
        }.width(35).height(50)
        Flex({direction: FlexDirection.Column,
          //  alignItems: ItemAlign.Stretch,
          justifyContent: FlexAlign.Center})
        {
          Button({ type: ButtonType.Normal, stateEffect: true }) {
            Image($r("app.media.grid")).width(25).height(25)
          }.width(40).height(40).borderRadius(10).backgroundColor(Color.White)
          Text('Categories').fontSize(15).fontWeight(FontWeight.Bold).fontColor(Color.Gray)
        }.width(65).height(50)
        Flex({direction: FlexDirection.Column,
          //  alignItems: ItemAlign.Stretch,
          justifyContent: FlexAlign.Center})
        {
          Button({ type: ButtonType.Normal, stateEffect: true }) {
            Image($r("app.media.bell")).width(25).height(25)
          }.width(40).height(40).borderRadius(10).backgroundColor(Color.White)
          Row(){}.width(20).height(1)
          Text('Notification').fontSize(15).fontWeight(FontWeight.Bold).fontColor(Color.Gray)
        }.width(75).height(50).backgroundColor(Color.White)
        Flex({direction: FlexDirection.Column,
          //  alignItems: ItemAlign.Stretch,
          justifyContent: FlexAlign.Center})
        {
          Button({ type: ButtonType.Normal, stateEffect: true }) {
            Image($r("app.media.cart")).width(25).height(25)
          }.width(40).height(40).borderRadius(10).backgroundColor(Color.White)
          Text('My Cart').fontSize(15).fontWeight(FontWeight.Bold).fontColor(Color.Gray)
        }.width(58).height(50).backgroundColor(Color.White)
      }.padding(18)

    }

  }
}

