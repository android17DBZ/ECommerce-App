/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************************************************************************************************************!*\
  !*** ../../../../../../../../DevEcoStudioProjects/APPinterface/entry/src/main/ets/MainAbility/pages/page2.ets?entry ***!
  \**********************************************************************************************************************/
class page2 extends View {
    constructor(compilerAssignedUniqueChildId, parent, params) {
        super(compilerAssignedUniqueChildId, parent);
        this.__message = new ObservedPropertySimple('Hi Ishan', this, "message");
        this.__show = new ObservedPropertySimple(false
        /**
         * In low-code mode, do not add anything to the build function, as it will be
         * overwritten by the content generated by the .visual file in the build phase.
         */
        , this, "show");
        this.updateWithValueParams(params);
    }
    updateWithValueParams(params) {
        if (params.message !== undefined) {
            this.message = params.message;
        }
        if (params.show !== undefined) {
            this.show = params.show;
        }
    }
    aboutToBeDeleted() {
        this.__message.aboutToBeDeleted();
        this.__show.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id());
    }
    get message() {
        return this.__message.get();
    }
    set message(newValue) {
        this.__message.set(newValue);
    }
    get show() {
        return this.__show.get();
    }
    set show(newValue) {
        this.__show.set(newValue);
    }
    /**
     * In low-code mode, do not add anything to the build function, as it will be
     * overwritten by the content generated by the .visual file in the build phase.
     */
    render() {
        Column.create();
        Flex.create({ direction: FlexDirection.Row, alignItems: ItemAlign.Stretch, justifyContent: FlexAlign.SpaceBetween });
        Flex.width('100%');
        Flex.height('10%');
        // Text('Hello world').fontSize(50)
        Button.createWithChild({ type: ButtonType.Circle, stateEffect: true });
        // Text('Hello world').fontSize(50)
        Button.width(50);
        // Text('Hello world').fontSize(50)
        Button.height(50);
        // Text('Hello world').fontSize(50)
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777233, "type": 20000, params: [] });
        Image.width(32);
        Image.height(32);
        // Text('Hello world').fontSize(50)
        Button.pop();
        Button.createWithChild({ type: ButtonType.Circle, stateEffect: true });
        Button.width(50);
        Button.height(50);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777238, "type": 20000, params: [] });
        Image.width(38);
        Image.height(38);
        Button.pop();
        Flex.pop();
        Text.create('Discover');
        Text.fontSize(18);
        Text.fontWeight(FontWeight.Bolder);
        Text.width('90%');
        Text.pop();
        Text.create('our new items.');
        Text.fontSize(18);
        Text.fontWeight(FontWeight.Bolder);
        Text.width('90%');
        Text.pop();
        Row.create();
        Row.width('90%');
        Row.height('10%');
        Row.create();
        Row.width('80%');
        Row.height(40);
        Row.backgroundColor(0xF5F5F5);
        Row.borderRadius(10);
        Button.createWithChild({ type: ButtonType.Circle, stateEffect: true });
        Button.width(40);
        Button.height(40);
        Button.backgroundColor(0xF5F5F5);
        Image.create({ "id": 16777234, "type": 20000, params: [] });
        Image.width(25);
        Image.height(25);
        Button.pop();
        Text.create('Search');
        Text.fontSize(13);
        Text.pop();
        Row.pop();
        Blank.create();
        Blank.pop();
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width(40);
        Button.height(40);
        Button.backgroundColor(0xF5F5F5);
        Button.borderRadius(10);
        Image.create({ "id": 16777227, "type": 20000, params: [] });
        Image.width(25);
        Image.height(25);
        Button.pop();
        Row.pop();
        Row.create();
        Row.width('75%');
        Row.height('10%');
        Row.border({ width: 2 });
        Row.borderColor(0xF5F5F5);
        Row.borderRadius(10);
        Row.padding(5);
        Row.create();
        Row.width('24%');
        Row.height('90%');
        Row.borderRadius(10);
        Row.backgroundColor(0xF5F5F5);
        Column.create();
        Column.width('1%');
        Column.height(20);
        Column.pop();
        Image.create({ "id": 16777235, "type": 20000, params: [] });
        Image.width(60);
        Image.height(45);
        Image.padding(1);
        Row.pop();
        // Column(){
        Flex.create({ direction: FlexDirection.Row, alignItems: ItemAlign.Center });
        //}.width('3%').height(10)
        //Column(){
        Flex.create({
            direction: FlexDirection.Column,
            alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.SpaceBetween
        });
        //}.width('3%').height(10)
        //Column(){
        Flex.width(150);
        //}.width('3%').height(10)
        //Column(){
        Flex.padding(5);
        Text.create('Running Unisex');
        Text.fontSize(12);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Text.create('Shoes');
        Text.fontSize(12);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Text.create('Coming soon...');
        Text.fontSize(13);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.fontColor(Color.Blue);
        Text.pop();
        //}.width('3%').height(10)
        //Column(){
        Flex.pop();
        Flex.create({ justifyContent: FlexAlign.Center, direction: FlexDirection.Column });
        Toggle.create({ type: ToggleType.Switch, isOn: true });
        Toggle.width(40);
        Toggle.height(20);
        Toggle.pop();
        Text.create("Notify me");
        Text.pop();
        Flex.pop();
        // Column(){
        Flex.pop();
        Row.pop();
        Column.create();
        Column.width('90%');
        Column.height(120);
        Row.create();
        Row.width(20);
        Row.height(10);
        Row.pop();
        Flex.create({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween });
        Text.create('Categories');
        Text.fontSize(17);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Row.create();
        Row.width(20);
        Row.height(15);
        Row.pop();
        Flex.create({ direction: FlexDirection.Row, alignItems: ItemAlign.Stretch, justifyContent: FlexAlign.SpaceBetween });
        Button.createWithLabel('Shoes', { type: ButtonType.Normal });
        Button.borderRadius(13);
        Button.backgroundColor(Color.Blue);
        Button.width(78);
        Button.pop();
        Button.createWithLabel('Table', { type: ButtonType.Normal });
        Button.borderRadius(13);
        Button.backgroundColor(0xF5F5F5);
        Button.width(75);
        Button.fontColor(0x000000);
        Button.pop();
        Button.createWithLabel('Clothes', { type: ButtonType.Normal });
        Button.borderRadius(13);
        Button.backgroundColor(0xF5F5F5);
        Button.width(87);
        Button.fontColor(0x000000);
        Button.pop();
        Button.createWithLabel('Sofa', { type: ButtonType.Normal });
        Button.borderRadius(13);
        Button.backgroundColor(0xF5F5F5);
        Button.width(68);
        Button.fontColor(0x000000);
        Button.pop();
        Flex.pop();
        Row.create();
        Row.width(20);
        Row.height(15);
        Row.pop();
        Flex.create({ justifyContent: FlexAlign.SpaceBetween });
        Flex.padding({ bottom: 10 });
        Text.create('Popular Shoes');
        Text.fontWeight(FontWeight.Bold);
        Text.fontSize(18);
        Text.pop();
        Flex.create({ justifyContent: FlexAlign.Center });
        Flex.width(100);
        Flex.padding({ top: 3 });
        Text.create('View All ');
        Text.padding({ right: 5 });
        Text.pop();
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width(15);
        Button.height(15);
        Button.backgroundColor(Color.Blue);
        Image.create({ "id": 16777220, "type": 20000, params: [] });
        Image.width(15);
        Image.height(15);
        Button.pop();
        Flex.pop();
        Flex.pop();
        Flex.pop();
        Column.pop();
        Row.create();
        Row.width(20);
        Row.height(15);
        Row.pop();
        Row.create({ space: 9 });
        Row.width('90%');
        Row.height(260);
        Column.create();
        Column.width('50%');
        Column.height(260);
        Column.backgroundColor(0x87CEEB);
        Column.borderRadius(18);
        Row.create();
        Row.width(20);
        Row.height(15);
        Row.pop();
        Flex.create({ justifyContent: FlexAlign.End });
        Flex.width('100%');
        Flex.height(30);
        Flex.padding(5);
        Button.createWithChild({ type: ButtonType.Circle, stateEffect: true });
        Button.width(15);
        Button.height(15);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777230, "type": 20000, params: [] });
        Image.width(15);
        Image.height(15);
        Button.pop();
        Flex.pop();
        Flex.create({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center });
        Flex.width('100%');
        Flex.height(140);
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width('100%');
        Button.height(140);
        Button.backgroundColor(0x87CEEB);
        Image.create({ "id": 16777237, "type": 20000, params: [] });
        Image.width(120);
        Image.height(100);
        Button.pop();
        Flex.pop();
        Flex.create({
            direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            //  justifyContent: FlexAlign.SpaceBetween
        });
        Flex.width(150);
        Flex.height(30);
        Flex.padding(5);
        Text.create('Running Unisex Shoes');
        Text.fontSize(12);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Text.create('Edition 1');
        Text.fontSize(12);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Flex.pop();
        Row.create();
        Row.width(20);
        Row.height(2);
        Row.pop();
        Row.create();
        Row.width(150);
        Row.height(30);
        Row.padding(5);
        Text.create('$5,400');
        Text.fontSize(12);
        Text.pop();
        Row.pop();
        Column.pop();
        Column.create();
        Column.width('50%');
        Column.height(260);
        Column.backgroundColor(0xFFC0CB);
        Column.borderRadius(18);
        Row.create();
        Row.width(20);
        Row.height(15);
        Row.pop();
        Flex.create({ justifyContent: FlexAlign.End });
        Flex.width('100%');
        Flex.height(30);
        Flex.padding(5);
        Button.createWithChild({ type: ButtonType.Circle, stateEffect: true });
        Button.width(15);
        Button.height(15);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777229, "type": 20000, params: [] });
        Image.width(15);
        Image.height(15);
        Button.pop();
        Flex.pop();
        Flex.create({ direction: FlexDirection.Column, justifyContent: FlexAlign.Center });
        Flex.width('100%');
        Flex.height(140);
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width('100%');
        Button.height(140);
        Button.backgroundColor(0xFFC0CB);
        Image.create({ "id": 16777236, "type": 20000, params: [] });
        Image.width(140);
        Image.height(120);
        Button.pop();
        Flex.pop();
        Flex.create({
            direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            //  justifyContent: FlexAlign.SpaceBetween
        });
        Flex.width(150);
        Flex.height(30);
        Flex.padding(5);
        Text.create('Running Unisex Shoes');
        Text.fontSize(12);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Text.create('Edition 1');
        Text.fontSize(12);
        Text.fontWeight(FontWeight.Bold);
        Text.width('90%');
        Text.pop();
        Flex.pop();
        Row.create();
        Row.width(20);
        Row.height(2);
        Row.pop();
        Row.create();
        Row.width(150);
        Row.height(30);
        Row.padding(5);
        Text.create('$2,200');
        Text.fontSize(12);
        Text.pop();
        Row.pop();
        Column.pop();
        Row.pop();
        Row.create();
        Row.width(20);
        Row.height(15);
        Row.pop();
        Divider.create();
        Divider.strokeWidth(3);
        Divider.opacity(0.3);
        Flex.create({ direction: FlexDirection.Row,
            //  alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.SpaceAround });
        Flex.padding(18);
        Flex.create({ direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.Center });
        Flex.width(35);
        Flex.height(50);
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width(40);
        Button.height(40);
        Button.borderRadius(10);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777231, "type": 20000, params: [] });
        Image.width(25);
        Image.height(25);
        Button.pop();
        Text.create('Home');
        Text.fontSize(15);
        Text.fontWeight(FontWeight.Bold);
        Text.pop();
        Flex.pop();
        Flex.create({ direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.Center });
        Flex.width(65);
        Flex.height(50);
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width(40);
        Button.height(40);
        Button.borderRadius(10);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777228, "type": 20000, params: [] });
        Image.width(25);
        Image.height(25);
        Button.pop();
        Text.create('Categories');
        Text.fontSize(15);
        Text.fontWeight(FontWeight.Bold);
        Text.fontColor(Color.Gray);
        Text.pop();
        Flex.pop();
        Flex.create({ direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.Center });
        Flex.width(75);
        Flex.height(50);
        Flex.backgroundColor(Color.White);
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width(40);
        Button.height(40);
        Button.borderRadius(10);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777223, "type": 20000, params: [] });
        Image.width(25);
        Image.height(25);
        Button.pop();
        Row.create();
        Row.width(20);
        Row.height(1);
        Row.pop();
        Text.create('Notification');
        Text.fontSize(15);
        Text.fontWeight(FontWeight.Bold);
        Text.fontColor(Color.Gray);
        Text.pop();
        Flex.pop();
        Flex.create({ direction: FlexDirection.Column,
            //  alignItems: ItemAlign.Stretch,
            justifyContent: FlexAlign.Center });
        Flex.width(58);
        Flex.height(50);
        Flex.backgroundColor(Color.White);
        Button.createWithChild({ type: ButtonType.Normal, stateEffect: true });
        Button.width(40);
        Button.height(40);
        Button.borderRadius(10);
        Button.backgroundColor(Color.White);
        Image.create({ "id": 16777224, "type": 20000, params: [] });
        Image.width(25);
        Image.height(25);
        Button.pop();
        Text.create('My Cart');
        Text.fontSize(15);
        Text.fontWeight(FontWeight.Bold);
        Text.fontColor(Color.Gray);
        Text.pop();
        Flex.pop();
        Flex.pop();
        Column.pop();
    }
}
loadDocument(new page2("1", undefined, {}));

/******/ })()
;
//# sourceMappingURL=page2.js.map